%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: Wesley Mackey,,,,
%%Creator: GNU enscript 1.6.4
%%CreationDate: Tue Mar  6 21:11:05 2012
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 4
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 4
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 4
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 708 def
/d_header_w 536 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 708 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (einstein.pl.lis) def
/fdir () def
/ftail (einstein.pl.lis) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (03/06/12) def
/modtimestr (20:58:07) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Languages/prolog/Examples/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
30 695 M (1:) s
48 695 M
(Script started on Tue Mar  6 20:57:39 2012) s
30 684 M (2:) s
48 684 M
(bash-3.2$ cat -n ein\\007stein.pl) s
30 673 M (3:) s
48 673 M
(     1  % $Id: einstein.pl,v 1.3 2011-05-19 19:53:59-07 - - $ */) s
30 662 M (4:) s
48 662 M
(     2  ) s
30 651 M (5:) s
48 651 M
(     3  %) s
30 640 M (6:) s
48 640 M
(     4  % -----------------------------------------------------------------) s
30 629 M (7:) s
48 629 M
(     5  % ) s
30 618 M (8:) s
48 618 M
(     6  %                         Einstein's Riddle) s
30 607 M (9:) s
48 607 M
(     7  % ) s
24 596 M (10:) s
48 596 M
(     8  % * General Problem:) s
24 585 M (11:) s
48 585 M
(     9  %   - There are 5 houses in a row) s
24 574 M (12:) s
48 574 M
(    10  %   - Each house is a different color.) s
24 563 M (13:) s
48 563 M
(    11  %   - In each house lives a person with a different nationality.) s
24 552 M (14:) s
48 552 M
(    12  %   - The 5 owners) s
24 541 M (15:) s
48 541 M
(    13  %        + drink a certain type of beverage,) s
24 530 M (16:) s
48 530 M
(    14  %        + smoke a certain brand of cigar, and) s
24 519 M (17:) s
48 519 M
(    15  %        + keep a certain pet.) s
24 508 M (18:) s
48 508 M
(    16  %   - No owners have the same pet, smoke the same brand of cigar or) s
24 497 M (19:) s
48 497 M
(    17  %     drink the same beverage.) s
24 486 M (20:) s
48 486 M
(    18  % ) s
24 475 M (21:) s
48 475 M
(    19  % * Specific Facts:) s
24 464 M (22:) s
48 464 M
(    20  %   - The Brit lives in the red house.) s
24 453 M (23:) s
48 453 M
(    21  %   - The Swede keeps dogs as pets.) s
24 442 M (24:) s
48 442 M
(    22  %   - The Dane drinks tea.) s
24 431 M (25:) s
48 431 M
(    23  %   - The green house is on the left of the white house.) s
24 420 M (26:) s
48 420 M
(    24  %   - The green house's owner drinks coffee.) s
24 409 M (27:) s
48 409 M
(    25  %   - The person who smokes Pall Mall rears birds.) s
24 398 M (28:) s
48 398 M
(    26  %   - The owner of the yellow house smokes Dunhill.) s
24 387 M (29:) s
48 387 M
(    27  %   - The man living in the center house drinks milk.) s
24 376 M (30:) s
48 376 M
(    28  %   - The Norwegian lives in the first house.) s
24 365 M (31:) s
48 365 M
(    29  %   - The man who smokes Blends lives next to the one who keeps cats.) s
24 354 M (32:) s
48 354 M
(    30  %   - The man with the horse lives next to the man who smokes Dunhill.) s
24 343 M (33:) s
48 343 M
(    31  %   - The owner who smokes Bluemasters drinks beer.) s
24 332 M (34:) s
48 332 M
(    32  %   - The German smokes Prince.) s
24 321 M (35:) s
48 321 M
(    33  %   - The Norwegian lives next to the blue house.) s
24 310 M (36:) s
48 310 M
(    34  %   - The man who smokes Blends has a neighbor who drinks water.) s
24 299 M (37:) s
48 299 M
(    35  % ) s
24 288 M (38:) s
48 288 M
(    36  % * Question:) s
24 277 M (39:) s
48 277 M
(    37  %   - Who owns the fish?) s
24 266 M (40:) s
48 266 M
(    38  % ) s
24 255 M (41:) s
48 255 M
(    39  % -----------------------------------------------------------------) s
24 244 M (42:) s
48 244 M
(    40  %) s
24 233 M (43:) s
48 233 M
(    41  ) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (einstein.pl.lis) def
/fdir () def
/ftail (einstein.pl.lis) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (03/06/12) def
/modtimestr (20:58:07) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Languages/prolog/Examples/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
24 684 M (44:) s
48 684 M
(    42  %) s
24 673 M (45:) s
48 673 M
(    43  % Is the first house in a pair next to the second?) s
24 662 M (46:) s
48 662 M
(    44  %/) s
24 651 M (47:) s
48 651 M
(    45  left_of\( Left, Right, [Left, Right | _]\).) s
24 640 M (48:) s
48 640 M
(    46  left_of\( Left, Right, [_ | Others]\) :- left_of\( Left, Right, Others\).) s
24 629 M (49:) s
48 629 M
(    47  ) s
24 618 M (50:) s
48 618 M
(    48  %) s
24 607 M (51:) s
48 607 M
(    49  % Are the two houses in a pair next to each other?) s
24 596 M (52:) s
48 596 M
(    50  %/) s
24 585 M (53:) s
48 585 M
(    51  next_to\( Left, Right, Houses\) :- left_of\( Left, Right, Houses\).) s
24 574 M (54:) s
48 574 M
(    52  next_to\( Left, Right, Houses\) :- left_of\( Right, Left, Houses\).) s
24 563 M (55:) s
48 563 M
(    53  ) s
24 552 M (56:) s
48 552 M
(    54  %) s
24 541 M (57:) s
48 541 M
(    55  % Are each of the facts true about the houses?) s
24 530 M (58:) s
48 530 M
(    56  %/) s
24 519 M (59:) s
48 519 M
(    57  map_member\( [], _\).) s
24 508 M (60:) s
48 508 M
(    58  map_member\( [Fact | Facts], Houses\) :-) s
24 497 M (61:) s
48 497 M
(    59     member\( Fact, Houses\),) s
24 486 M (62:) s
48 486 M
(    60     map_member\( Facts, Houses\).) s
24 475 M (63:) s
48 475 M
(    61  ) s
24 464 M (64:) s
48 464 M
(    62  %) s
24 453 M (65:) s
48 453 M
(    63  % Apply each pair of relations \(left_of or next_to\) to the houses.) s
24 442 M (66:) s
48 442 M
(    64  %/) s
24 431 M (67:) s
48 431 M
(    65  map_pairs\( _, [], _\).) s
24 420 M (68:) s
48 420 M
(    66  map_pairs\( Relation, [First, Second | Rest], Houses\) :-) s
24 409 M (69:) s
48 409 M
(    67     call_with_args\( Relation, First, Second, Houses\),) s
24 398 M (70:) s
48 398 M
(    68     map_pairs\( Relation, Rest, Houses\).) s
24 387 M (71:) s
48 387 M
(    69  ) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
38 24 translate
/pagenum 3 def
/fname (einstein.pl.lis) def
/fdir () def
/ftail (einstein.pl.lis) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (03/06/12) def
/modtimestr (20:58:07) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Languages/prolog/Examples/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
24 684 M (72:) s
48 684 M
(    70  %) s
24 673 M (73:) s
48 673 M
(    71  % Statement of Einstein's riddle in Prolog.) s
24 662 M (74:) s
48 662 M
(    72  %/) s
24 651 M (75:) s
48 651 M
(    73  einstein\( Houses, Fish\) :-) s
24 640 M (76:) s
48 640 M
(    74     /*        house\( nation   , color , drink , smoke      , pet  \) */) s
24 629 M (77:) s
48 629 M
(    75     /*               ---------, ------, ------, -----------, -----  */) s
24 618 M (78:) s
48 618 M
(    76     Houses = [house\( norwegian, _     , _     , _          , _    \),) s
24 607 M (79:) s
48 607 M
(    77               _,) s
24 596 M (80:) s
48 596 M
(    78               house\( _        , _     , milk  , _          , _    \),) s
24 585 M (81:) s
48 585 M
(    79               _,) s
24 574 M (82:) s
48 574 M
(    80               _) s
24 563 M (83:) s
48 563 M
(    81     ],) s
24 552 M (84:) s
48 552 M
(    82     Facts =  [house\( brit     , red   , _     , _          , _    \),) s
24 541 M (85:) s
48 541 M
(    83               house\( swede    , _     , _     , _          , dogs \),) s
24 530 M (86:) s
48 530 M
(    84               house\( dane     , _     , tea   , _          , _    \),) s
24 519 M (87:) s
48 519 M
(    85               house\( _        , green , coffee, _          , _    \),) s
24 508 M (88:) s
48 508 M
(    86               house\( _        , _     , _     , pallmall   , birds\),) s
24 497 M (89:) s
48 497 M
(    87               house\( _        , yellow, _     , dunhill    , _    \),) s
24 486 M (90:) s
48 486 M
(    88               house\( _        , _     , beer  , bluemasters, _    \),) s
24 475 M (91:) s
48 475 M
(    89               house\( german   , _     , _     , prince     , _    \),) s
24 464 M (92:) s
48 464 M
(    90               house\( Fish     , _     , _     , _          , fish \)) s
24 453 M (93:) s
48 453 M
(    91     ],) s
24 442 M (94:) s
48 442 M
(    92     Left =   [house\( _        , green , _     , _          , _    \),) s
24 431 M (95:) s
48 431 M
(    93               house\( _        , white , _     , _          , _    \)) s
24 420 M (96:) s
48 420 M
(    94     ],) s
24 409 M (97:) s
48 409 M
(    95     Next =   [house\( _        , _     , _     , blends     , _    \),) s
24 398 M (98:) s
48 398 M
(    96               house\( _        , _     , _     , _          , cats \),) s
24 387 M (99:) s
48 387 M
(    97               house\( _        , _     , _     , _          , horse\),) s
18 376 M (100:) s
48 376 M
(    98               house\( _        , _     , _     , dunhill    , _    \),) s
18 365 M (101:) s
48 365 M
(    99               house\( norwegian, _     , _     , _          , _    \),) s
18 354 M (102:) s
48 354 M
(   100               house\( _        , blue  , _     , _          , _    \),) s
18 343 M (103:) s
48 343 M
(   101               house\( _        , _     , _     , blends     , _    \),) s
18 332 M (104:) s
48 332 M
(   102               house\( _        , _     , water , _          , _    \)) s
18 321 M (105:) s
48 321 M
(   103     ],) s
18 310 M (106:) s
48 310 M
(   104     map_member\( Facts, Houses\),) s
18 299 M (107:) s
48 299 M
(   105     map_pairs\( left_of, Left, Houses\),) s
18 288 M (108:) s
48 288 M
(   106     map_pairs\( next_to, Next, Houses\).) s
18 277 M (109:) s
48 277 M
(   107  ) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
38 24 translate
/pagenum 4 def
/fname (einstein.pl.lis) def
/fdir () def
/ftail (einstein.pl.lis) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (03/06/12) def
/modtimestr (20:58:07) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Languages/prolog/Examples/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
18 684 M (110:) s
48 684 M
(   108  %) s
18 673 M (111:) s
48 673 M
(   109  % Code to print out the answer to the riddle.) s
18 662 M (112:) s
48 662 M
(   110  %/) s
18 651 M (113:) s
48 651 M
(   111  ) s
18 640 M (114:) s
48 640 M
(   112  riddle :-) s
18 629 M (115:) s
48 629 M
(   113     einstein\( Houses, Fish\),) s
18 618 M (116:) s
48 618 M
(   114     write_houses\( Houses\), nl,) s
18 607 M (117:) s
48 607 M
(   115     write_fish\( Fish\), nl,) s
18 596 M (118:) s
48 596 M
(   116     write\( '--------------------------------------------------'\),) s
18 585 M (119:) s
48 585 M
(   117     nl, nl.) s
18 574 M (120:) s
48 574 M
(   118  ) s
18 563 M (121:) s
48 563 M
(   119  write_fish\( Fish\) :-) s
18 552 M (122:) s
48 552 M
(   120     write\( 'The '\), write\( Fish\), write\( ' owns the fish.'\), nl.) s
18 541 M (123:) s
48 541 M
(   121  ) s
18 530 M (124:) s
48 530 M
(   122  write_houses\( []\).) s
18 519 M (125:) s
48 519 M
(   123  write_houses\( [House | Houses]\) :-) s
18 508 M (126:) s
48 508 M
(   124     write_house\( House\),) s
18 497 M (127:) s
48 497 M
(   125     write_houses\( Houses\).) s
18 486 M (128:) s
48 486 M
(   126  ) s
18 475 M (129:) s
48 475 M
(   127  write_house\( house\( Nation, Color, Drink, Smoke, Pet\)\) :-) s
18 464 M (130:) s
48 464 M
(   128     write_label\( 'House', Nation, comma\),) s
18 453 M (131:) s
48 453 M
(   129     write_label\( 'Color', Color, comma\),) s
18 442 M (132:) s
48 442 M
(   130     write_label\( 'Drink', Drink, comma\),) s
18 431 M (133:) s
48 431 M
(   131     write_label\( 'Smoke', Smoke, comma\),) s
18 420 M (134:) s
48 420 M
(   132     write_label\( 'Pet', Pet, period\).) s
18 409 M (135:) s
48 409 M
(   133  ) s
18 398 M (136:) s
48 398 M
(   134  write_label\( Label, Object, Punct\) :-) s
18 387 M (137:) s
48 387 M
(   135     write\( Label\), write\( ': '\), write\( Object\), call\( Punct\).) s
18 376 M (138:) s
48 376 M
(   136  ) s
18 365 M (139:) s
48 365 M
(   137  comma :- write\( ', '\).) s
18 354 M (140:) s
48 354 M
(   138  period :- write\( '.'\), nl.) s
18 343 M (141:) s
48 343 M
(   139  ) s
18 332 M (142:) s
48 332 M
(   140  %) s
18 321 M (143:) s
48 321 M
(   141  % Automatically print out the answer to the riddle.) s
18 310 M (144:) s
48 310 M
(   142  %/) s
18 299 M (145:) s
48 299 M
(   143  ) s
18 288 M (146:) s
48 288 M
(   144  % TEST: riddle.) s
18 277 M (147:) s
48 277 M
(   145  ) s
18 266 M (148:) s
48 266 M
(bash-3.2$ gprolog) s
18 255 M (149:) s
48 255 M
(GNU Prolog 1.3.1) s
18 244 M (150:) s
48 244 M
(By Daniel Diaz) s
18 233 M (151:) s
48 233 M
(Copyright \(C\) 1999-2009 Daniel Diaz) s
18 222 M (152:) s
48 222 M
(| ?- [einstein]) s
132 222 M
() s
126 222 M
() s
120 222 M
() s
114 222 M
() s
108 222 M
() s
102 222 M
() s
96 222 M
() s
90 222 M
() s
84 222 M
() s
78 222 M
([einstein].) s
18 211 M (153:) s
48 211 M
(compiling /afs/cats.ucsc.edu/courses/cmps112-wm/Languages/prolog/Examples/einste) s
5 200 M
(in.pl for byte code...) s
18 189 M (154:) s
48 189 M
(/afs/cats.ucsc.edu/courses/cmps112-wm/Languages/prolog/Examples/einstein.pl comp) s
5 178 M
(iled, 145 lines read - 9165 bytes written, 10 ms) s
18 167 M (155:) s
18 156 M (156:) s
48 156 M
(yes) s
18 145 M (157:) s
48 145 M
(| ?- riddle.) s
18 134 M (158:) s
48 134 M
(House: norwegian, Color: yellow, Drink: water, Smoke: dunhill, Pet: cats.) s
18 123 M (159:) s
48 123 M
(House: dane, Color: blue, Drink: tea, Smoke: blends, Pet: horse.) s
18 112 M (160:) s
48 112 M
(House: brit, Color: red, Drink: milk, Smoke: pallmall, Pet: birds.) s
18 101 M (161:) s
48 101 M
(House: german, Color: green, Drink: coffee, Smoke: prince, Pet: fish.) s
18 90 M (162:) s
48 90 M
(House: swede, Color: white, Drink: beer, Smoke: bluemasters, Pet: dogs.) s
18 79 M (163:) s
18 68 M (164:) s
48 68 M
(The german owns the fish.) s
18 57 M (165:) s
18 46 M (166:) s
48 46 M
(--------------------------------------------------) s
18 35 M (167:) s
18 24 M (168:) s
18 13 M (169:) s
48 13 M
(true ? ) s
18 2 M (170:) s
_R
S
%%Page: (5) 5
%%BeginPageSetup
_S
38 24 translate
/pagenum 5 def
/fname (einstein.pl.lis) def
/fdir () def
/ftail (einstein.pl.lis) def
% User defined strings:
/pagenumstr (5) def
/moddatestr (03/06/12) def
/modtimestr (20:58:07) def
/user_header_p true def
/user_header_left_str ($cmps112-wm/Languages/prolog/Examples/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
18 695 M (171:) s
48 695 M
(\(1 ms\) yes) s
18 684 M (172:) s
48 684 M
(| ?- ) s
18 673 M (173:) s
18 662 M (174:) s
48 662 M
(bash-3.2$ exit) s
18 651 M (175:) s
18 640 M (176:) s
48 640 M
(Script done on Tue Mar  6 20:58:07 2012) s
_R
S
%%Trailer
%%Pages: 5
%%DocumentNeededResources: font Times-Roman Courier-Bold Courier 
%%+ font Times-Bold 
%%EOF
