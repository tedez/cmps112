Script started on Tue Mar  6 21:04:05 2012
bash-3.2$ cat -n mergesort.pl
     1	% $Id: mergesort.pl,v 1.3 2011-05-19 19:53:59-07 - - $ */
     2	
     3	%
     4	% Some sorting examples.
     5	%
     6	
     7	%
     8	% Insertion sort's top level function accepts the Unsorted list
     9	% and returns the Sorted list.  Insert inserts one element into
    10	% list such that the output list is sorted.
    11	%
    12	
    13	insertion_sort( Unsorted, Sorted ) :-
    14	   insertion_sort_gather( Unsorted, [], Sorted ).
    15	
    16	insertion_sort_gather( [], Gathered, Gathered ).
    17	insertion_sort_gather( [Head|Tail], Gathered, Sorted ) :-
    18	   insert( Head, Gathered, NewGathered ),
    19	   insertion_sort_gather( Tail, NewGathered, Sorted ).
    20	
    21	insert( Item, [], [Item] ).
    22	insert( Item, [Head|Tail], [Item,Head|Tail] ) :-
    23	   Item =< Head.
    24	insert( Item, [Head|Tail], [Head|NewTail] ) :-
    25	   Item > Head,
    26	   insert( Item, Tail, NewTail ).
    27	
    28	%
    29	% Merge sort divides the unsorted list into subparts and then
    30	% merges the sublists back again in pairs.
    31	%
    32	
    33	mergesort( [], [] ).
    34	mergesort( [Only], [Only] ).
    35	mergesort( Unsorted, Sorted ) :-
    36	   split( Unsorted, UnsortedHalf1, UnsortedHalf2 ),
    37	   mergesort( UnsortedHalf1, SortedHalf1 ),
    38	   mergesort( UnsortedHalf2, SortedHalf2 ),
    39	   merge( SortedHalf1, SortedHalf2, Sorted ).
    40	
    41	split( [], [], [] ).
    42	split( [Only], [Only], [] ).
    43	split( [First,Second|Tail], [First|Tail1], [Second|Tail2] ) :-
    44	   split( Tail, Tail1, Tail2 ).
    45	
    46	merge( [], List, List ).
    47	merge( List, [], List ).
    48	merge( [Head1|Tail1], [Head2|Tail2], [Head1|NewTail] ) :-
    49	   Head1 =< Head2,
    50	   merge( Tail1, [Head2|Tail2], NewTail ).
    51	merge( [Head1|Tail1], [Head2|Tail2], [Head2|NewTail] ) :-
    52	   Head1 > Head2,
    53	   merge( [Head1|Tail1], Tail2, NewTail ).
    54	
bash-3.2$ gprolog
GNU Prolog 1.3.1
By Daniel Diaz
Copyright (C) 1999-2009 Daniel Diaz
| ?- [mergesort][mergesort].
compiling /afs/cats.ucsc.edu/courses/cmps112-wm/Languages/prolog/Examples/mergesort.pl for byte code...
/afs/cats.ucsc.edu/courses/cmps112-wm/Languages/prolog/Examples/mergesort.pl compiled, 54 lines read - 4467 bytes written, 11 ms

(1 ms) yes
| ?- mergesort([8, 4, 3, 6, -9, 66, 10, 3][8, 4, 3, 6, -9, 66, 10, 3], X)([8, 4, 3, 6, -9, 66, 10, 3], X).

X = [-9,3,3,4,6,8,10,66] ? 

(1 ms) yes
| ?- 


bash-3.2$ exit

Script done on Tue Mar  6 21:05:39 2012
